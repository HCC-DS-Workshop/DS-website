---
title: "Confidence Interval and Hypothesis Testing"
format: revealjs
editor: visual

title-slide-attributes:
  data-background-color: "hotpink"
---

## Functions for Confidence Intervals

```{r setup}

#| echo: FALSE

library(mosaic)
library(openintro)
```

<br>

These are the functions for confidence intervals.

<br>

-   prop.test(...., correct =FALSE)

-   t.test()

<br>

The same functions are used for hypothesis testing.

## The Data Sets

<br>

We'll use a couple of different data sets for the different CI and hypothesis tests.

-   For a proportion we'll use the `exclusive_relationship` data set.

-   For a single mean lets use `HELPrct`.

-   For a difference of means test we'll use the `nyc_marathon` data frame

## Proportions

If we were to run `?proptest()` we'd find.

x- count of successes, length 2 vector of success and failure counts, a formula, or a character, numeric, or factor vector containing raw data.

n- sample size (successes + failures) or a data frame (for the formula interface).

conf.level- the confidence level must be between 0 and 1.

::: incremental
-   The "correct" argument is not listed.
:::

## Confidence Interval for Proportions

What is the 90% Confidence interval for the proportion of undergraduate students who have been in exactly 4 relationships?

```{r tally-conditions}
#| echo: TRUE
#Assume independence
#At least 10 successes/failures
tally(~num==4, data=exclusive_relationship)
```

```{r exclusive-relationships}
#| echo: TRUE

prop.test(~num == 4,data=exclusive_relationship, conf.level = 0.90, correct=FALSE)

```

## To make the CI look better

<br> You can use the \$ operator from base R<br>

```{r dollar-sign}
#| echo: TRUE

results <- prop.test(x= ~num==4,data=exclusive_relationship, conf.level = 0.90, correct=FALSE)
results$conf.int
```

<br> or you can use the wrapper confint() <br>

```{r wrapper}
#| echo: TRUE
confint(prop.test(x= ~num==4,data=exclusive_relationship, conf.level = 0.90))
```

## You can also make a CI from a homework problem. {.smaller}

> *A store randomly samples 603 shoppers over the course of a year and finds that 142 of them made their visit because of a coupon they'd received in the mail. Construct a 95% confidence interval for the fraction of all shoppers during the year whose visit was because of a coupon they'd received in the mail.*

<br>

A sample size n=603 and x=142 successes.

```{r CI-homework}
#| echo: TRUE
confint(prop.test(x=142,n=603,correct=FALSE))

```

## A Warning on Proportions

`prop.test(... correct= FALSE)` works well with problems based on the OpenIntroStats text on MyOpenMath made by Adam Gilbert. \n.

If `prop.test()` doesn't work, you could check out `binom.test()` \n.

`binom.test(... method="Wald")` is TI-83ish. \n

Eric uses a different package.

## Proportion Hypothesis Test {.smaller}

To make a hypothesis we need two additional arguments. <br>

-   p - This is the population proportion from the null hypothesis

-   alternative - c("two.sided", "less", "greater")

Is the population parameter for the proportion of students who have had four relationships $p=0.30$?

$H_0: p= 0.3$

$H_1: p\ne 0.3$

$\alpha=0.05$

```{r prop-hy-test}
#| echo: TRUE

prop.test(x=~num==4, p=0.3, alternative="t", data=exclusive_relationship, conf.level = 0.90, correct=FALSE)

```

## The cheat sheets

There are four statistics related cheat sheets in the resources tab.

<br>

1.  The mosaic cheat sheet

    -   This is the "official" cheat sheet put out by Mosaic

2.  Nic's MTH 142 Intro to Statistics cheat sheet.

3.  Eric's MTH 142 Intro to Statistics sheets

4.  Amelia McNamara's All the R you need. 

<br>

## Single mean Hypothesis Test

Use the `HELPrct` dataset to answer the question:

> Is the average Center for Epidemiologic Studies Depression measure at baseline (depression measure of individuals going through detoxification) $\mu \ge 15$?

<br>

. . . 
$p-value \approx 0$.

. . . 

`t.test(~cesd, data=HELPrct, mu=15, alternative = "g")`


<br>

## Difference of means test

Use the `nyc_marathon` data frame to answer the question:

> Is there a difference in the winning times between the men's and women's divisions in the NYC Marathon?

. . . 

`t.test(time_hrs ~ division, data=nyc_marathon)`

